// <auto-generated />
using System;
using Bomberjam.Website.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bomberjam.Website.Migrations
{
    [DbContext(typeof(BomberjamContext))]
    partial class BomberjamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Bomberjam.Website.Database.DbBot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Updated");

                    b.HasIndex("UserId");

                    b.ToTable("App_Bots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(7145),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(7395),
                            UserId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8441),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8443),
                            UserId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8445),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8446),
                            UserId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8447),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8447),
                            UserId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8448),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8449),
                            UserId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8450),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8451),
                            UserId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8452),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 168, DateTimeKind.Utc).AddTicks(8452),
                            UserId = new Guid("00000000-0000-0000-0000-000000000007")
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<double?>("GameDuration")
                        .HasColumnType("REAL");

                    b.Property<double?>("InitDuration")
                        .HasColumnType("REAL");

                    b.Property<string>("Stderr")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stdout")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("App_Games");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<float>("DeltaPoints")
                        .HasColumnType("REAL");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Responsiveness")
                        .HasColumnType("REAL");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("App_GameUsers");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("Status");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.ToTable("App_Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("84c80409-f8a7-4fa5-94f1-2b4841d97056"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(1868),
                            Data = "00000000-0000-0000-0000-000000000001",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(2214)
                        },
                        new
                        {
                            Id = new Guid("8bdd023b-2c32-440f-b2af-96c56db4594c"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3006),
                            Data = "00000000-0000-0000-0000-000000000002",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3007)
                        },
                        new
                        {
                            Id = new Guid("a2b02f33-82f0-428b-899a-f8816e272607"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3012),
                            Data = "00000000-0000-0000-0000-000000000003",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3013)
                        },
                        new
                        {
                            Id = new Guid("83baa9b0-ddf1-4d92-b46a-38dd3d954913"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3014),
                            Data = "00000000-0000-0000-0000-000000000004",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3015)
                        },
                        new
                        {
                            Id = new Guid("e6a62b3e-1e00-4fba-8273-c075b9881304"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3018),
                            Data = "00000000-0000-0000-0000-000000000005",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3018)
                        },
                        new
                        {
                            Id = new Guid("5ab114b1-fc27-4567-8ac6-ccb40acd203f"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3020),
                            Data = "00000000-0000-0000-0000-000000000006",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3021)
                        },
                        new
                        {
                            Id = new Guid("e8e6ad71-f191-42e4-8559-62b4966bc98f"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3023),
                            Data = "00000000-0000-0000-0000-000000000007",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 169, DateTimeKind.Utc).AddTicks(3023)
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("GithubId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Points")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GithubId")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("App_Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(5075),
                            Email = "simmon.anthony@gmail.com",
                            GithubId = 14242083,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(5322),
                            UserName = "Askaiser"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6083),
                            Email = "falgar@gmail.com",
                            GithubId = 36072624,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6085),
                            UserName = "Falgar"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6086),
                            Email = "xenure@gmail.com",
                            GithubId = 9208753,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6087),
                            UserName = "Xenure"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6088),
                            Email = "minty@gmail.com",
                            GithubId = 26142591,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6088),
                            UserName = "Minty"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6089),
                            Email = "kalmera@gmail.com",
                            GithubId = 5122918,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6090),
                            UserName = "Kalmera"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6091),
                            Email = "pandarf@gmail.com",
                            GithubId = 1035273,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6092),
                            UserName = "Pandarf"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Created = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6093),
                            Email = "mire@gmail.com",
                            GithubId = 5489330,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 23, 16, 49, 35, 167, DateTimeKind.Utc).AddTicks(6094),
                            UserName = "Mire"
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbBot", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbGame", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
