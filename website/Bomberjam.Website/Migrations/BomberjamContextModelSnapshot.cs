// <auto-generated />
using System;
using Bomberjam.Website.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bomberjam.Website.Migrations
{
    [DbContext(typeof(BomberjamContext))]
    partial class BomberjamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Bomberjam.Website.Database.DbBot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Errors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Updated");

                    b.HasIndex("UserId");

                    b.ToTable("App_Bots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(6160),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(6410),
                            UserId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7662),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7664),
                            UserId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7667),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7667),
                            UserId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7668),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7669),
                            UserId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7670),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7671),
                            UserId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7672),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7673),
                            UserId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7674),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 387, DateTimeKind.Utc).AddTicks(7675),
                            UserId = new Guid("00000000-0000-0000-0000-000000000007")
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Errors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GameDuration")
                        .HasColumnType("float");

                    b.Property<double?>("InitDuration")
                        .HasColumnType("float");

                    b.Property<string>("Stderr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stdout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("App_Games");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<float>("DeltaPoints")
                        .HasColumnType("real");

                    b.Property<string>("Errors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<float>("Responsiveness")
                        .HasColumnType("real");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("App_GameUsers");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("Status");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.ToTable("App_Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ca68972-7ecb-446a-9803-3832a1f58c90"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(940),
                            Data = "00000000-0000-0000-0000-000000000001",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(1180)
                        },
                        new
                        {
                            Id = new Guid("ed2a86a3-674e-4a40-85f3-446b1273d016"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(1998),
                            Data = "00000000-0000-0000-0000-000000000002",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2001)
                        },
                        new
                        {
                            Id = new Guid("2ce8a06a-6438-4a1a-aa4c-a09edbc7b96e"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2005),
                            Data = "00000000-0000-0000-0000-000000000003",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2006)
                        },
                        new
                        {
                            Id = new Guid("85f51f94-6e23-4ccb-ae23-e13460abd497"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2008),
                            Data = "00000000-0000-0000-0000-000000000004",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2009)
                        },
                        new
                        {
                            Id = new Guid("72e6044b-bf11-4996-ae1a-4016bda9fedc"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2011),
                            Data = "00000000-0000-0000-0000-000000000005",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2011)
                        },
                        new
                        {
                            Id = new Guid("443b71a5-3f7b-4427-b7f5-929d73522b9b"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2013),
                            Data = "00000000-0000-0000-0000-000000000006",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2014)
                        },
                        new
                        {
                            Id = new Guid("efced929-e8e1-44ac-a83e-132e3a8a0c5d"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2027),
                            Data = "00000000-0000-0000-0000-000000000007",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 388, DateTimeKind.Utc).AddTicks(2028)
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GithubId")
                        .HasColumnType("int");

                    b.Property<float>("Points")
                        .HasColumnType("real");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("GithubId")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("App_Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(4146),
                            Email = "simmon.anthony@gmail.com",
                            GithubId = 14242083,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(4384),
                            UserName = "Askaiser"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5168),
                            Email = "falgar@gmail.com",
                            GithubId = 36072624,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5171),
                            UserName = "Falgar"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5173),
                            Email = "xenure@gmail.com",
                            GithubId = 9208753,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5174),
                            UserName = "Xenure"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5175),
                            Email = "minty@gmail.com",
                            GithubId = 26142591,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5176),
                            UserName = "Minty"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5177),
                            Email = "kalmera@gmail.com",
                            GithubId = 5122918,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5178),
                            UserName = "Kalmera"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5179),
                            Email = "pandarf@gmail.com",
                            GithubId = 1035273,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5179),
                            UserName = "Pandarf"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Created = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5182),
                            Email = "mire@gmail.com",
                            GithubId = 5489330,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 0, 53, 21, 386, DateTimeKind.Utc).AddTicks(5182),
                            UserName = "Mire"
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbBot", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbGame", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
