// <auto-generated />
using System;
using Bomberjam.Website.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bomberjam.Website.Migrations
{
    [DbContext(typeof(BomberjamContext))]
    partial class BomberjamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Bomberjam.Website.Database.DbBot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Updated");

                    b.HasIndex("UserId");

                    b.ToTable("App_Bots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(7367),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(7546),
                            UserId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8363),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8366),
                            UserId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8368),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8369),
                            UserId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8371),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8372),
                            UserId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8373),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8374),
                            UserId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8375),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8376),
                            UserId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8377),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 871, DateTimeKind.Utc).AddTicks(8378),
                            UserId = new Guid("00000000-0000-0000-0000-000000000007")
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<double?>("GameDuration")
                        .HasColumnType("REAL");

                    b.Property<double?>("InitDuration")
                        .HasColumnType("REAL");

                    b.Property<string>("Stderr")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stdout")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("App_Games");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<float>("DeltaPoints")
                        .HasColumnType("REAL");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Responsiveness")
                        .HasColumnType("REAL");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("App_GameUsers");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("Status");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.ToTable("App_Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9470317e-a30d-48fc-b447-702d8dbeb4b9"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(1525),
                            Data = "00000000-0000-0000-0000-000000000001",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(1697)
                        },
                        new
                        {
                            Id = new Guid("f70d0763-0982-4bc5-acc0-066cebe4f924"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2259),
                            Data = "00000000-0000-0000-0000-000000000002",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2261)
                        },
                        new
                        {
                            Id = new Guid("3b068500-0184-4645-8702-356f0039002e"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2264),
                            Data = "00000000-0000-0000-0000-000000000003",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2265)
                        },
                        new
                        {
                            Id = new Guid("cdc6adc9-1cb3-49b8-871f-daabd08518e7"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2267),
                            Data = "00000000-0000-0000-0000-000000000004",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2268)
                        },
                        new
                        {
                            Id = new Guid("246c2d75-8749-4cc8-abb4-c09b290f98fe"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2270),
                            Data = "00000000-0000-0000-0000-000000000005",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2271)
                        },
                        new
                        {
                            Id = new Guid("bf3205cb-4695-40a8-840c-7de822920233"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2274),
                            Data = "00000000-0000-0000-0000-000000000006",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2275)
                        },
                        new
                        {
                            Id = new Guid("cf58965a-c55e-4eee-983a-71072a1bcf20"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2277),
                            Data = "00000000-0000-0000-0000-000000000007",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 872, DateTimeKind.Utc).AddTicks(2278)
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("GithubId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Points")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GithubId")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("App_Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(6719),
                            Email = "simmon.anthony@gmail.com",
                            GithubId = 14242083,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(6893),
                            UserName = "Askaiser"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7511),
                            Email = "falgar@gmail.com",
                            GithubId = 36072624,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7514),
                            UserName = "Falgar"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7515),
                            Email = "xenure@gmail.com",
                            GithubId = 9208753,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7516),
                            UserName = "Xenure"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7518),
                            Email = "minty@gmail.com",
                            GithubId = 26142591,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7519),
                            UserName = "Minty"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7520),
                            Email = "kalmera@gmail.com",
                            GithubId = 5122918,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7521),
                            UserName = "Kalmera"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7522),
                            Email = "pandarf@gmail.com",
                            GithubId = 1035273,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7523),
                            UserName = "Pandarf"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Created = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7525),
                            Email = "mire@gmail.com",
                            GithubId = 5489330,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 26, 4, 39, 48, 870, DateTimeKind.Utc).AddTicks(7526),
                            UserName = "Mire"
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbBot", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbGame", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
