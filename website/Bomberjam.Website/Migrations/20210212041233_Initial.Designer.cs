// <auto-generated />
using System;
using Bomberjam.Website.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bomberjam.Website.Migrations
{
    [DbContext(typeof(BomberjamContext))]
    [Migration("20210212041233_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Bomberjam.Website.Database.DbGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<double?>("GameDuration")
                        .HasColumnType("REAL");

                    b.Property<double?>("InitDuration")
                        .HasColumnType("REAL");

                    b.Property<string>("Stderr")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stdout")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<float>("DeltaPoints")
                        .HasColumnType("REAL");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("GameUsers");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("Status");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78e41df7-7bc3-4815-b8b3-816c08b49851"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(6671),
                            Data = "00000000-0000-0000-0000-000000000001",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(6852),
                            UserId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("5ecb4629-5b69-4df2-a6f6-2378b89f3824"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7856),
                            Data = "00000000-0000-0000-0000-000000000002",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7858),
                            UserId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("c32bf946-9127-490d-9de8-7905f594db97"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7862),
                            Data = "00000000-0000-0000-0000-000000000003",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7863),
                            UserId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("03b0f003-702a-4dee-a3db-f80c55b7d5b9"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7866),
                            Data = "00000000-0000-0000-0000-000000000004",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7867),
                            UserId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            Id = new Guid("36fd6622-b47e-446b-a859-7d77b61e5287"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7869),
                            Data = "00000000-0000-0000-0000-000000000005",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7870),
                            UserId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("fe64b2d5-52c6-4df1-af97-fa66c3b8b346"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7872),
                            Data = "00000000-0000-0000-0000-000000000006",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7873),
                            UserId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            Id = new Guid("b850786b-f8a1-4fae-9dd9-e6ecbf5f5f27"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7876),
                            Data = "00000000-0000-0000-0000-000000000007",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 449, DateTimeKind.Utc).AddTicks(7876),
                            UserId = new Guid("00000000-0000-0000-0000-000000000007")
                        },
                        new
                        {
                            Id = new Guid("4b13ac24-d17d-461d-a4cf-661a0129cb7b"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 450, DateTimeKind.Utc).AddTicks(3),
                            Data = "00000000-0000-0000-0000-000000000001:Askaiser,00000000-0000-0000-0000-000000000006:Pandarf,00000000-0000-0000-0000-000000000003:Xenure,00000000-0000-0000-0000-000000000002:Falgar",
                            Status = 1,
                            Type = 2,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 450, DateTimeKind.Utc).AddTicks(8)
                        },
                        new
                        {
                            Id = new Guid("320ca448-5ace-4958-b947-e828a5341846"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 450, DateTimeKind.Utc).AddTicks(1832),
                            Data = "00000000-0000-0000-0000-000000000007:Mire,00000000-0000-0000-0000-000000000005:Kalmera,00000000-0000-0000-0000-000000000003:Xenure,00000000-0000-0000-0000-000000000002:Falgar",
                            Status = 1,
                            Type = 2,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 450, DateTimeKind.Utc).AddTicks(1835)
                        },
                        new
                        {
                            Id = new Guid("3a2fff15-b806-420f-aa68-706229218423"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 450, DateTimeKind.Utc).AddTicks(1859),
                            Data = "00000000-0000-0000-0000-000000000004:Minty,00000000-0000-0000-0000-000000000006:Pandarf,00000000-0000-0000-0000-000000000005:Kalmera,00000000-0000-0000-0000-000000000001:Askaiser",
                            Status = 1,
                            Type = 2,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 450, DateTimeKind.Utc).AddTicks(1859)
                        },
                        new
                        {
                            Id = new Guid("b9e40918-c3ac-4743-a421-ee620a7124f6"),
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 450, DateTimeKind.Utc).AddTicks(1873),
                            Data = "00000000-0000-0000-0000-000000000002:Falgar,00000000-0000-0000-0000-000000000001:Askaiser,00000000-0000-0000-0000-000000000003:Xenure,00000000-0000-0000-0000-000000000005:Kalmera",
                            Status = 1,
                            Type = 2,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 450, DateTimeKind.Utc).AddTicks(1874)
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BotLanguage")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompilationErrors")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GithubId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompiled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompiling")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Points")
                        .HasColumnType("REAL");

                    b.Property<int>("SubmitCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GithubId")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(5700),
                            Email = "simmon.anthony@gmail.com",
                            GameCount = 0,
                            GithubId = 14242083,
                            IsCompiled = false,
                            IsCompiling = false,
                            Points = 1500f,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(5873),
                            UserName = "Askaiser"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7413),
                            Email = "falgar@gmail.com",
                            GameCount = 0,
                            GithubId = 36072624,
                            IsCompiled = false,
                            IsCompiling = false,
                            Points = 1500f,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7417),
                            UserName = "Falgar"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7420),
                            Email = "xenure@gmail.com",
                            GameCount = 0,
                            GithubId = 9208753,
                            IsCompiled = false,
                            IsCompiling = false,
                            Points = 1500f,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7421),
                            UserName = "Xenure"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7422),
                            Email = "minty@gmail.com",
                            GameCount = 0,
                            GithubId = 26142591,
                            IsCompiled = false,
                            IsCompiling = false,
                            Points = 1500f,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7423),
                            UserName = "Minty"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7425),
                            Email = "kalmera@gmail.com",
                            GameCount = 0,
                            GithubId = 5122918,
                            IsCompiled = false,
                            IsCompiling = false,
                            Points = 1500f,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7426),
                            UserName = "Kalmera"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7428),
                            Email = "pandarf@gmail.com",
                            GameCount = 0,
                            GithubId = 1035273,
                            IsCompiled = false,
                            IsCompiling = false,
                            Points = 1500f,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7429),
                            UserName = "Pandarf"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7431),
                            Email = "mire@gmail.com",
                            GameCount = 0,
                            GithubId = 5489330,
                            IsCompiled = false,
                            IsCompiling = false,
                            Points = 1500f,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 12, 4, 12, 33, 448, DateTimeKind.Utc).AddTicks(7432),
                            UserName = "Mire"
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbGame", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
