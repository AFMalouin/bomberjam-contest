// <auto-generated />
using System;
using Bomberjam.Website.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bomberjam.Website.Migrations
{
    [DbContext(typeof(BomberjamContext))]
    [Migration("20210219230235_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Bomberjam.Website.Database.DbBot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Updated");

                    b.HasIndex("UserId");

                    b.ToTable("App_Bots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(5270),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(5446),
                            UserId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6197),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6199),
                            UserId = new Guid("00000000-0000-0000-0000-000000000002")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6201),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6202),
                            UserId = new Guid("00000000-0000-0000-0000-000000000003")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6203),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6204),
                            UserId = new Guid("00000000-0000-0000-0000-000000000004")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6205),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6206),
                            UserId = new Guid("00000000-0000-0000-0000-000000000005")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6207),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6208),
                            UserId = new Guid("00000000-0000-0000-0000-000000000006")
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6210),
                            Errors = "",
                            Language = "",
                            Status = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(6210),
                            UserId = new Guid("00000000-0000-0000-0000-000000000007")
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<double?>("GameDuration")
                        .HasColumnType("REAL");

                    b.Property<double?>("InitDuration")
                        .HasColumnType("REAL");

                    b.Property<string>("Stderr")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stdout")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("App_Games");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<float>("DeltaPoints")
                        .HasColumnType("REAL");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("App_GameUsers");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("Status");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.ToTable("App_Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f6d1154-a11a-47f0-88f2-2eaf76905ef3"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9092),
                            Data = "00000000-0000-0000-0000-000000000001",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9261)
                        },
                        new
                        {
                            Id = new Guid("9a856208-f40a-417a-9343-b0e2ce9ed6c1"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9964),
                            Data = "00000000-0000-0000-0000-000000000002",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9966)
                        },
                        new
                        {
                            Id = new Guid("353f5522-82b7-4cb7-8d58-681094388226"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9970),
                            Data = "00000000-0000-0000-0000-000000000003",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9971)
                        },
                        new
                        {
                            Id = new Guid("284ca368-048f-4971-8242-0a414756feff"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9973),
                            Data = "00000000-0000-0000-0000-000000000004",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9974)
                        },
                        new
                        {
                            Id = new Guid("d8e16ffa-611a-4ec5-b244-0eaef17b95fb"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9976),
                            Data = "00000000-0000-0000-0000-000000000005",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9977)
                        },
                        new
                        {
                            Id = new Guid("bc570354-53af-4bab-924d-14189029ee33"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9979),
                            Data = "00000000-0000-0000-0000-000000000006",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9980)
                        },
                        new
                        {
                            Id = new Guid("3c375212-b83c-447a-b3db-d9532c8b0785"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9983),
                            Data = "00000000-0000-0000-0000-000000000007",
                            Status = 0,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 310, DateTimeKind.Utc).AddTicks(9983)
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("GithubId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Points")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GithubId")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("App_Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(4620),
                            Email = "simmon.anthony@gmail.com",
                            GithubId = 14242083,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(4799),
                            UserName = "Askaiser"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5448),
                            Email = "falgar@gmail.com",
                            GithubId = 36072624,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5450),
                            UserName = "Falgar"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5452),
                            Email = "xenure@gmail.com",
                            GithubId = 9208753,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5453),
                            UserName = "Xenure"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5454),
                            Email = "minty@gmail.com",
                            GithubId = 26142591,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5455),
                            UserName = "Minty"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5456),
                            Email = "kalmera@gmail.com",
                            GithubId = 5122918,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5457),
                            UserName = "Kalmera"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5459),
                            Email = "pandarf@gmail.com",
                            GithubId = 1035273,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5460),
                            UserName = "Pandarf"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Created = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5461),
                            Email = "mire@gmail.com",
                            GithubId = 5489330,
                            Points = 1500f,
                            Updated = new DateTime(2021, 2, 19, 23, 2, 35, 309, DateTimeKind.Utc).AddTicks(5462),
                            UserName = "Mire"
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbBot", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbGame", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
