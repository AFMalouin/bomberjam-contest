// <auto-generated />
using System;
using Bomberjam.Website.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bomberjam.Website.Migrations
{
    [DbContext(typeof(BomberjamContext))]
    [Migration("20210205001530_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Bomberjam.Website.Database.DbGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<double?>("GameDuration")
                        .HasColumnType("REAL");

                    b.Property<double?>("InitDuration")
                        .HasColumnType("REAL");

                    b.Property<string>("Stderr")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stdout")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WinnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Errors")
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("GameUsers");
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbQueuedTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("Status");

                    b.HasIndex("Type");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a67e6efd-de5a-4424-99f9-54393795f8fe"),
                            Created = new DateTime(2021, 2, 5, 0, 15, 29, 833, DateTimeKind.Utc).AddTicks(8460),
                            Data = "00000000-0000-0000-0000-000000000001",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 5, 0, 15, 29, 833, DateTimeKind.Utc).AddTicks(8657)
                        },
                        new
                        {
                            Id = new Guid("93777e82-a26d-475d-89ce-682f9c55269f"),
                            Created = new DateTime(2021, 2, 5, 0, 15, 29, 833, DateTimeKind.Utc).AddTicks(9250),
                            Data = "00000000-0000-0000-0000-000000000002",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 5, 0, 15, 29, 833, DateTimeKind.Utc).AddTicks(9252)
                        },
                        new
                        {
                            Id = new Guid("637685ac-f0c0-4201-9b5a-89c48ac7d066"),
                            Created = new DateTime(2021, 2, 5, 0, 15, 29, 833, DateTimeKind.Utc).AddTicks(9256),
                            Data = "00000000-0000-0000-0000-000000000003",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 5, 0, 15, 29, 833, DateTimeKind.Utc).AddTicks(9257)
                        },
                        new
                        {
                            Id = new Guid("93fa9939-c6f4-4538-89d8-25c7d60f7ae3"),
                            Created = new DateTime(2021, 2, 5, 0, 15, 29, 833, DateTimeKind.Utc).AddTicks(9259),
                            Data = "00000000-0000-0000-0000-000000000004",
                            Status = 1,
                            Type = 1,
                            Updated = new DateTime(2021, 2, 5, 0, 15, 29, 833, DateTimeKind.Utc).AddTicks(9260)
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BotLanguage")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompilationErrors")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompiled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompiling")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubmitCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 5, 0, 15, 29, 832, DateTimeKind.Utc).AddTicks(8471),
                            Email = "simmon.anthony@gmail.com",
                            GameCount = 0,
                            IsCompiled = false,
                            IsCompiling = false,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 5, 0, 15, 29, 832, DateTimeKind.Utc).AddTicks(8660),
                            Username = "Askaiser"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 5, 0, 15, 29, 832, DateTimeKind.Utc).AddTicks(9825),
                            Email = "falgar@gmail.com",
                            GameCount = 0,
                            IsCompiled = false,
                            IsCompiling = false,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 5, 0, 15, 29, 832, DateTimeKind.Utc).AddTicks(9827),
                            Username = "Falgar"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 5, 0, 15, 29, 832, DateTimeKind.Utc).AddTicks(9830),
                            Email = "xenure@gmail.com",
                            GameCount = 0,
                            IsCompiled = false,
                            IsCompiling = false,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 5, 0, 15, 29, 832, DateTimeKind.Utc).AddTicks(9831),
                            Username = "Xenure"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            BotLanguage = "",
                            CompilationErrors = "",
                            Created = new DateTime(2021, 2, 5, 0, 15, 29, 832, DateTimeKind.Utc).AddTicks(9834),
                            Email = "minty@gmail.com",
                            GameCount = 0,
                            IsCompiled = false,
                            IsCompiling = false,
                            SubmitCount = 1,
                            Updated = new DateTime(2021, 2, 5, 0, 15, 29, 832, DateTimeKind.Utc).AddTicks(9835),
                            Username = "Minty"
                        });
                });

            modelBuilder.Entity("Bomberjam.Website.Database.DbGameUser", b =>
                {
                    b.HasOne("Bomberjam.Website.Database.DbGame", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomberjam.Website.Database.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
